services:
  application-db:
    build: ./application_db
    container_name: application-db
    ports:
      -  "8082:8082"
      - "9092:9092"
    networks:
      - application-network
    volumes:
      - ./application_db/data:/db/data
  
  storage:
    image: quay.io/minio/minio
    container_name: storage
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=java_user
      - MINIO_ROOT_PASSWORD=java_user
      - MINIO_DEFAULT_BUCKETS=rag
    volumes:
      - minio-data:/data
    command: server /data --console-address ":9001"
    networks:
      - application-network
  bucket-creator:
    image: minio/mc
    container_name: bucket-creator
    depends_on:
      - storage
    environment:
      - MINIO_ACCESS_KEY=java_user
      - MINIO_SECRET_KEY=java_user
    entrypoint: >
     /bin/sh -c "
      sleep 15 &&
      mc alias set mystorage http://storage:9000 java_user java_user &&
      mc mb mystorage/rag || true
      "
    networks:
      - application-network
  
  messaging:
    image: rabbitmq:4.0-management
    container_name: messaging
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=java_user
      - RABBITMQ_DEFAULT_PASS=java_user
    networks:
      - application-network
    

  rag:
    build: ./FastAPI
    container_name: rag
    ports:
      - "8081:8000"
    env_file:
      - ./FastAPI/.env
    networks:
      - application-network
    entrypoint: >
      sh -c "
      sleep 10 &&
      cd /service &&
      uvicorn app.main:app --host 0.0.0.0 --port 8000
      "
    depends_on:
      - storage
      - messaging
      - bucket-creator
  
  application:
    build: ./SpringBoot
    container_name: application
    ports:
      - "8080:8080"
    env_file:
      - ./SpringBoot/.env
    depends_on:
      - application-db
      - storage
      - messaging
      - bucket-creator
    entrypoint: >
      sh -c "
      sleep 10 &&
      java -jar /app/app.jar
      "
    networks:
      - application-network
  
  gateway:
    image:  kong/kong-gateway:3.10.0.1
    container_name: api-gateway
    env_file:
      - ./kong/.env
    ports:
      - 8000:8000
      - 8443:8443
      - 8001:8001
      - 8444:8444
      - 8002:8002
      - 8445:8445
      - 8003:8003
      - 8004:8004
    volumes:
      - ./kong:/kong/declarative/
    networks:
      - application-network
    
networks:
  application-network:
    driver: bridge
  frontend-network:
    driver: bridge
volumes:
  minio-data: